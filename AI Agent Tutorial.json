{
  "name": "AI Agent Tutorial",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -384,
        1056
      ],
      "id": "d5fdda83-cd78-4c81-8788-65aaba3cdf73",
      "name": "When chat message received",
      "webhookId": "5a5b59ad-4600-4820-9770-b926201e5477"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -224,
        176
      ],
      "id": "51ee2f55-9de2-4f6b-91e6-41a2e32e0081",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -80,
        176
      ],
      "id": "e56ebed7-f9d4-4e28-b841-b35a391edf14",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Search Expenses",
        "documentId": {
          "__rl": true,
          "value": "1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY",
          "mode": "list",
          "cachedResultName": "AI Agent Tutorial - Expense Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY/edit#gid=0"
        },
        "options": {
          "returnFirstMatch": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_only_First_Matching_Row', ``, 'boolean') }}"
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        320,
        176
      ],
      "id": "36a73448-e116-420b-b235-1230d3b957e1",
      "name": "Search Expenses",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "O5WpQz6VV2A1evBL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY",
          "mode": "list",
          "cachedResultName": "AI Agent Tutorial - Expense Tracker",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Wkqdq5Yjx2DUXVAkmVXke67ZuKK-eN9dIaFg-m19UIY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Date', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}",
            "Amount": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Amount', ``, 'string') }}",
            "Category": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Category', ``, 'string') }}",
            "Month": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Month', ``, 'string') }}",
            "Year": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Year', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Year",
              "displayName": "Year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Month",
              "displayName": "Month",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Amount",
              "displayName": "Amount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        144,
        176
      ],
      "id": "171115a5-cf8d-45df-951b-b11dec5b57c5",
      "name": "Append row in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "O5WpQz6VV2A1evBL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Level 1 - Expense Tracker\n",
        "height": 464,
        "width": 1472
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        -96
      ],
      "typeVersion": 1,
      "id": "f6d7303c-6812-45a8-99a1-9f55d75e521f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=Your job is to help me log and retrieve expenses using the two available tools.\n\nI will send you a message with an amount (default currency is USD, even if not mentioned) and where I spent the money. I may also provide the date, but if I don't, assume it is today - {{ $now }}. Dates should be logged as MM-DD-YYYY.\n\nYou must categorize the expense as Grocery, Eating Out, Transport, Health, Personal, Entertainment, Clothes, or Shopping.\n\nThen log the expense using the Google Sheets tool.\n\nExample\n\n2025 | August | 25 | Coffee | $5.00 | Eating Out\n\nI may also ask you about a bunch of expense or one particular expense. Use the Google sheets tool to retrieve the expense(s) and answer my question. The available columns to filter by are Year, Month, Date, Notes, Amount, and Category.\n\nDo not entertain any other questions or conversation. Respectfully remind the user that you are an expense tracker, nothing more."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -80,
        -32
      ],
      "id": "a911ac21-54d1-42e0-b913-0e6b6f5e17f2",
      "name": "Expense Tracker"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a research assistant and your job is to help me come up with knowledgeable, cited answers regarding any questions I am expected to answer.\n\nYou have the Tavily Search tool, the Wikipedia tool, and the Perplexity tool to access. For every query, you MUST use all three tools, and present the research in an organized manner.\n\nI will then choose what to use, after which you will generate a response to the query and save it as a draft using the Gmail too. You must also provide the output here."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -80,
        496
      ],
      "id": "0e510f42-8938-4494-aabe-434347eb614b",
      "name": "Research and Reply"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -304,
        704
      ],
      "id": "cb001764-a79c-4b83-8545-bcb49d02322e",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -144,
        704
      ],
      "id": "09e6e046-6cdf-45b1-9133-b57b0646f4df",
      "name": "Simple Memory1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        384,
        704
      ],
      "id": "51bdefa6-5dd3-431f-943d-ef9df6bafa34",
      "name": "Wikipedia"
    },
    {
      "parameters": {
        "toolDescription": "Searches tavily for relevant information and sources",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{{ $fromAI(\"search_topic\")}}\",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 3,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": [],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        240,
        704
      ],
      "id": "28a962ce-f961-4f8e-8fb2-33e86474f29e",
      "name": "Tavily Search",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ugAKuytDz61wg9ws",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "model": "sonar",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        80,
        704
      ],
      "id": "020370eb-91d8-46b6-a62d-a8f847e515b1",
      "name": "Message a model in Perplexity",
      "credentials": {
        "perplexityApi": {
          "id": "wL705OXIfF8sibkB",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        528,
        704
      ],
      "id": "bd3c18bc-ca7b-49b7-a79f-5c1c94ca24dd",
      "name": "Create a draft in Gmail",
      "webhookId": "b349575d-17b0-47e8-b2c7-0c1bbad92767",
      "credentials": {
        "gmailOAuth2": {
          "id": "47wVmO3uPCdVj57K",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Level 2 - Two-step research and answer",
        "height": 464,
        "width": 1472,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        448
      ],
      "typeVersion": 1,
      "id": "81930483-9596-443b-a8c4-9a44c3e25ef5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Level 3 - Multi-step content creation agent",
        "height": 832,
        "width": 2112,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -640,
        976
      ],
      "typeVersion": 1,
      "id": "2b1233cf-8e11-4a67-8d7f-8ed524492a9b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are a content creation agent. I will provide you with a topic, and your job is to take that topic and use the available tools to turn it into:\n\na) a well-researched blog post with an accompanying image\nb) an X post with an image\nc) a LinkedIn post with an image\n\nI will only provide you with a topic. From that, you must use each tool one after the other and add each output to a Google Doc using the Google Docs tool - your one (and only) output should be the complete Google Docs link.\n\nExample flow\n\nYou receive a topic\n\nYou create a google doc and retain the document ID\n\nYou then generate a blog post image and add its URL to the document\n\nYou call the blog post tool, and add its output to the document\n\nYou then generate an X image and add its URL to the document\n\nYou call the X tool, and add its output to the document\n\nYou then generate a LinkedIn image and add its URL to the document\n\nYou call the LinkedIn tool and add its output to the document\n\nYou output a link to the completed Google Doc\n",
          "maxIterations": 30
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -80,
        1072
      ],
      "id": "26d9bd17-56b8-4021-ac28-e89d13c8b31b",
      "name": "Content Factory"
    },
    {
      "parameters": {
        "toolDescription": "blog post writer agent",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "=You are a master at writing 1,000 word blog posts. In  the prompt, you will receive a topic.\n\nStep 1: Use the SerpAPI and Perplexity tools to generate a title, h2, h3 outline for the blog post. Maximum 3 H2s + intro and conclusion. Each H2 should have a max 2 H3s, total word count target of 1000 words.\n\nStep 2: Use the tavily and perplexity tools to research the h2 section, keeping note of the sources.\n\nStep 3: Use the writer tool to write out the section - remember to give it sources, too.\n\nRepeat for the next section, then again until all sections have been researched and written\n\nStep 4: Write an introduction and conlusion using the writer tool\n\nStep 5: Present your output\n\nIMPORTANT - Your ONLY output should be a final blog post, nothing else."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        -96,
        1296
      ],
      "id": "110c711c-ab28-4393-8d6e-c925a0ae78c4",
      "name": "Blog post writer"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -272,
        1296
      ],
      "id": "70067b02-26b5-465a-b767-9b3ebe534b87",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -288,
        1488
      ],
      "id": "3efe5676-95f0-42dd-83ba-856131fdbcd8",
      "name": "Simple Memory3"
    },
    {
      "parameters": {
        "model": "sonar",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        -112,
        1488
      ],
      "id": "407ae9c8-2a93-4fdd-b3a4-14dc577db6e2",
      "name": "Message a model in Perplexity1",
      "credentials": {
        "perplexityApi": {
          "id": "wL705OXIfF8sibkB",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Searches tavily for relevant information and sources",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"{{ $fromAI(\"search_topic\")}}\",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 3,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [],\n  \"exclude_domains\": [],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        208,
        1488
      ],
      "id": "3c21ad23-b334-4abb-be26-7cf38461f909",
      "name": "Tavily Search1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ugAKuytDz61wg9ws",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Get autocomplete suggestions",
        "url": "=https://serpapi.com/search.json?engine=google_autocomplete&q={{ $fromAI(\"keyword_as_searched_by_user\") }}&api_key=a60317e455992230c808d2c9028f2d634c4758d691e9729b1d3c6075ed20736f",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        32,
        1488
      ],
      "id": "cc2abb89-0b9b-49b9-a479-3c1702422688",
      "name": "Autocomplete Suggestions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-nano",
          "mode": "list",
          "cachedResultName": "gpt-4.1-nano"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        336,
        1680
      ],
      "id": "7f609700-2b76-4afa-ae0b-d0ca093f3c43",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "folderId": "default",
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        288,
        1152
      ],
      "id": "9a74a4f8-e366-4d18-b37c-f603779a2c39",
      "name": "Create a document in Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "44goXqIxMgzHbg4q",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Doc_ID_or_URL', ``, 'string') }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('actionFields0_Text', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        192,
        1264
      ],
      "id": "10b478b1-10e4-4c7c-9b57-8074902e18f8",
      "name": "Update a document in Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "44goXqIxMgzHbg4q",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "X post writer",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "You are an expert at writing punchy, attention-grabbing, scroll-stopping, and informative Twitter (X) posts."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        720,
        1360
      ],
      "id": "4fd57f9e-6e1f-4411-93f6-d2549116779e",
      "name": "X post writer"
    },
    {
      "parameters": {
        "toolDescription": "section writer",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "you are an expert at writing blog post content. Write in easy-to-understand language - target difficulty level is 8th grade. Remember to add links where needed - I will provide you the sources."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        368,
        1488
      ],
      "id": "9c241fd2-57a1-450d-9220-44e69acad823",
      "name": "Writer Tool"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        976,
        1600
      ],
      "id": "216378b7-6657-40f0-a4b1-648007c73d09",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Linkedin Post Writer",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "# LinkedIn Broetry Style Guide for AI Agents\n\n## Overview\nLinkedIn broetry is a distinctive writing style that combines pseudo-inspirational content with specific formatting techniques to create posts that appear profound while remaining accessible. This guide provides instructions for generating authentic LinkedIn broetry content.\n\n## Core Principles\n\n**Emotional Resonance Over Substance**\nFocus on feelings and universal experiences rather than specific, actionable advice. The goal is to make readers nod along and feel understood, not necessarily to provide concrete value.\n\n**Accessibility Through Simplicity**\nUse language that feels both relatable and slightly elevated. Avoid jargon while maintaining an air of wisdom.\n\n**Visual Impact**\nThe formatting is crucial - posts should look like poetry even when the content is prose.\n\n## Formatting Rules\n\n### Line Breaks\n- End lines at natural pause points\n- Keep lines between 3-8 words when possible\n- Use line breaks to create rhythm and emphasis\n- Never exceed 10 words per line\n\n### Spacing\n- Use single line breaks between thoughts\n- Add double line breaks before major transitions\n- Include strategic white space for visual breathing room\n\n### Punctuation\n- Minimal punctuation - rely on line breaks instead\n- End declarative statements without periods\n- Use periods sparingly for emphasis\n- Question marks are acceptable for rhetorical questions\n\n## Content Themes\n\n### Professional Growth\n- Overcoming setbacks\n- Learning from failure\n- The importance of persistence\n- Finding your authentic voice\n\n### Life Lessons\n- Work-life balance insights\n- The value of relationships\n- Time management wisdom\n- Personal transformation stories\n\n### Leadership Philosophy\n- Humble leadership principles\n- Team empowerment concepts\n- Vision and purpose alignment\n- Servant leadership ideals\n\n## Language Patterns\n\n### Opening Hooks\n- \"Yesterday I learned something\"\n- \"A simple truth\"\n- \"Someone once told me\"\n- \"I used to think\"\n- \"The best advice I ever received\"\n\n### Transitional Phrases\n- \"But here's the thing\"\n- \"What I've learned is\"\n- \"The real lesson\"\n- \"It turns out\"\n- \"Here's what changed everything\"\n\n### Closing Statements\n- \"That's leadership\"\n- \"Growth isn't easy\"\n- \"But it's worth it\"\n- \"Simple but not easy\"\n- \"What do you think?\"\n\n## Tone Guidelines\n\n**Vulnerable Yet Confident**\nShare struggles and lessons learned while maintaining authority. Admit mistakes without appearing incompetent.\n\n**Humble Yet Aspirational**\nAcknowledge others' contributions while positioning yourself as someone worth following.\n\n**Conversational Yet Profound**\nUse everyday language to express deeper truths about professional and personal development.\n\n## Structure Templates\n\n### The Revelation Pattern\n```\nI used to believe [common assumption]\n\nThen [pivotal moment/experience]\n\nNow I understand\n[deeper truth]\n\n[Application/lesson]\n\nThat's [broad concept]\n```\n\n### The Story Pattern\n```\n[Brief scene setting]\n\n[Challenge/conflict]\n\n[Turning point]\n\n[Resolution/insight]\n\n[Universal application]\n\nWhat's your experience?\n```\n\n### The List Pattern\n```\nThree things I've learned about [topic]:\n\n[Insight 1]\n[Brief elaboration]\n\n[Insight 2]\n[Brief elaboration]\n\n[Insight 3]\n[Brief elaboration]\n\nWhich resonates with you?\n```\n\n## Content Guidelines\n\n**Be Genuinely Relatable**\nDraw from common professional experiences: difficult conversations, career transitions, team challenges, work-life balance struggles.\n\n**Avoid Specificity**\nKeep details vague enough for broad application. Instead of \"quarterly sales targets,\" use \"challenging goals.\"\n\n**Include Subtle Humility**\nAcknowledge learning and growth rather than presenting yourself as having all the answers.\n\n**End with Engagement**\nInclude questions or calls for shared experiences to encourage comments and discussion.\n\n## Common Mistakes to Avoid\n\n- Lines that are too long (breaks the visual flow)\n- Overly complex vocabulary (reduces accessibility)\n- Too much specificity (limits relatability)\n- Excessive punctuation (disrupts the poetic feel)\n- Lack of white space (creates visual density)\n- Missing emotional hook (reduces engagement)\n\n## Example Application\n\n**Standard Business Writing:**\n\"Effective leadership requires clear communication, strategic thinking, and the ability to adapt to changing circumstances. Leaders must also be willing to admit when they don't know something and seek input from their teams.\"\n\n**Broetry Format:**\n```\nLeadership isn't about\nhaving all the answers\n\nIt's about asking\nthe right questions\n\nAnd listening\nreally listening\nto your team\n\nThe best leaders I know\nsay \"I don't know\"\nmore than \"I know\"\n\nThat's courage\nThat's growth\nThat's leadership\n\nWhat's been your experience?"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1184,
        1360
      ],
      "id": "b28c67a0-5064-4f4e-a672-9f633eaffce7",
      "name": "LinkedIn Post Writer"
    },
    {
      "parameters": {
        "toolDescription": "Use replicate to generate an image",
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell/predictions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"input\": {\n      \"prompt\": \"{{ $fromAI(\"prompt\") }}\",\n      \"go_fast\": true,\n      \"megapixels\": \"1\",\n      \"num_outputs\": 1,\n      \"aspect_ratio\": \"1:1\",\n      \"output_format\": \"webp\",\n      \"output_quality\": 80,\n      \"num_inference_steps\": 4\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        464,
        1104
      ],
      "id": "b96e4a8b-ff5f-4b83-bc50-9b9b618b6883",
      "name": "Generate Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "sF9lQ2gNQ4fKGCox",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Check status of generated image",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        624,
        1056
      ],
      "id": "8bc260ac-62aa-4f42-812d-051705e4c73b",
      "name": "Check Status",
      "credentials": {
        "httpHeaderAuth": {
          "id": "sF9lQ2gNQ4fKGCox",
          "name": "Replicate"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -432,
        1472
      ],
      "id": "bd625891-f1f5-43e9-8570-a241a150ea36",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -448,
        1296
      ],
      "id": "dd4291fc-6303-4046-96d8-b9cabb8b439b",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "ybRg3lag38rmtn5D",
          "name": "Shab OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Content Factory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Expense Tracker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Expense Tracker",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Search Expenses": {
      "ai_tool": [
        [
          {
            "node": "Expense Tracker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "Expense Tracker",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tavily Search": {
      "ai_tool": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Message a model in Perplexity": {
      "ai_tool": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a draft in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Research and Reply",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Blog post writer": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Content Factory",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory3": {
      "ai_memory": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Message a model in Perplexity1": {
      "ai_tool": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tavily Search1": {
      "ai_tool": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Autocomplete Suggestions": {
      "ai_tool": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Writer Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create a document in Google Docs": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a document in Google Docs": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "X post writer": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Writer Tool": {
      "ai_tool": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "X post writer",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "LinkedIn Post Writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Post Writer": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "ai_tool": [
        [
          {
            "node": "Content Factory",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Blog post writer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Content Factory",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1ed4c775-426b-4af9-9019-48b5966794d7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f8d903bf41171a711206c3bb74b40015823841bf2b93e148da68e764370f1965"
  },
  "id": "9HtMDPwc2TuhlsS8",
  "tags": []
}